""" Given a binary tree, return the preorder traversal of its nodes' values. """

# Iterative approach
class Solution(object):
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        current = root
        output, stack = [], []
        
        while True:
            if current is not None:
                stack.append(current) # Creates a mark for current node.
                output.append(current.val) # Stores the root(parent's node)
                current = current.left # Traverses the left subtree
            elif(stack):
                current = stack.pop() # Pops out the last node from stack, references it to current.
                current = current.right
            else:
                break
        return output
